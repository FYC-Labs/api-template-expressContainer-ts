version: '3.7'

services:
  fyc_boilerplate_backend_postgres_prod:
    container_name: fyc_boilerplate_backend_postgres_prod
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=fyc
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./.runtime/database/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always
    networks:
      - fyc_boilerplate_backend_network_prod

  fyc_boilerplate_backend_redis_prod:
    container_name: fyc_boilerplate_backend_redis_prod
    image: redis:alpine
    volumes:
      - ./.runtime/database/redis:/data
    ports:
      - 6379:6379
    restart: always
    networks:
      - fyc_boilerplate_backend_network_prod

  fyc_boilerplate_backend_gateway_prod:
    container_name: fyc_boilerplate_backend_gateway_prod
    image: "fyc_boilerplate_backend_gateway_prod:${TAG}"
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
    ports:
      - 3333:3333
    command: ./wait-for.sh fyc_boilerplate_backend_postgres_prod:5432 -s -- ./wait-for.sh fyc_boilerplate_backend_redis_prod:6379 -s -- bash -c "npx prisma generate && npx prisma migrate deploy && node ./src/system/infra/http/server.js"
    depends_on:
      - fyc_boilerplate_backend_postgres_prod
      - fyc_boilerplate_backend_redis_prod
    healthcheck:
      test: curl -f http://fyc_boilerplate_backend_gateway_prod:3333/health || exit 1
      interval: 1m
      timeout: 20s
      retries: 3
      start_period: 1m
    restart: always
    networks:
      - fyc_boilerplate_backend_network_prod

networks:
  fyc_boilerplate_backend_network_prod:
